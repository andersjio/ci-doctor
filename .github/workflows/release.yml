name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Verify version matches tag
        shell: bash
        run: |
          TAG="${GITHUB_REF##*/}"
          TAG_VER="${TAG#v}"
          FILE_VER=$(python - <<'PY'
          import tomllib
          with open('pyproject.toml','rb') as f:
              data = tomllib.load(f)
          print(data.get('project',{}).get('version',''))
          PY
          )
          echo "Tag: $TAG_VER; Project version: $FILE_VER"
          if [ "$TAG_VER" != "$FILE_VER" ]; then
            echo "Version mismatch: tag v$TAG_VER != pyproject version $FILE_VER" >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/p/ci-doctor
    permissions:
      contents: read
      id-token: write  # for trusted publishing if enabled
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # If you enable PyPI Trusted Publishing for this project, remove 'password'
          # and rely on OIDC with 'id-token: write'.

